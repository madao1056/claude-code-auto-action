#!/bin/bash
# Claude Code Auto Action - Environment Configuration
# This file contains all environment variables for complete automation

# ========================================
# CLAUDE CLI AUTOMATION SETTINGS
# ========================================

# Skip all interactive prompts and confirmations
export CLAUDE_AUTO_APPROVE=true
export CLAUDE_SKIP_CONFIRMATION=true
export CLAUDE_SKIP_PROMPTS=true
export CLAUDE_NON_INTERACTIVE=true
export CLAUDE_BATCH_MODE=true
export CLAUDE_YES_TO_ALL=true

# Cursor/Editor integration
export CLAUDE_AUTO_SAVE_FILES=true
export CLAUDE_SKIP_EDITOR_PROMPTS=true
export CLAUDE_AUTO_APPLY_EDITS=true
export CLAUDE_SKIP_CURSOR_CONFIRMATION=true

# Bash command execution
export CLAUDE_AUTO_EXECUTE_COMMANDS=true
export CLAUDE_SKIP_COMMAND_CONFIRMATION=true
export CLAUDE_AUTO_PROCEED=true
export CLAUDE_TRUST_ALL_COMMANDS=true

# Bypass permission checks (YOLO mode)
export CLAUDE_PERMISSIONS_MODE=bypassPermissions
export CLAUDE_DANGEROUSLY_SKIP_PERMISSIONS=true
export CLAUDE_SKIP_SAFETY_CHECKS=true
export CLAUDE_TRUST_ALL_OPERATIONS=true

# Auto-approve specific operations
export CLAUDE_AUTO_APPROVE_FILE_OPERATIONS=true
export CLAUDE_AUTO_APPROVE_SHELL_COMMANDS=true
export CLAUDE_AUTO_APPROVE_NETWORK_REQUESTS=true
export CLAUDE_AUTO_APPROVE_SYSTEM_CHANGES=true
export CLAUDE_AUTO_APPROVE_DESTRUCTIVE_OPERATIONS=true

# ========================================
# PROJECT CREATION AUTOMATION
# ========================================

# Auto-create project structure
export CLAUDE_AUTO_CREATE_DIRECTORIES=true
export CLAUDE_AUTO_CREATE_FILES=true
export CLAUDE_AUTO_INITIALIZE_GIT=true
export CLAUDE_AUTO_INSTALL_DEPENDENCIES=true
export CLAUDE_AUTO_SETUP_ENVIRONMENT=true

# Skip project creation prompts
export CLAUDE_SKIP_PROJECT_NAME_PROMPT=true
export CLAUDE_SKIP_TECH_STACK_PROMPT=true
export CLAUDE_SKIP_DIRECTORY_PROMPT=true
export CLAUDE_SKIP_FEATURE_SELECTION=true

# Default project settings
export CLAUDE_DEFAULT_PROJECT_TYPE=auto
export CLAUDE_DEFAULT_TECH_STACK=auto
export CLAUDE_DEFAULT_LICENSE=MIT
export CLAUDE_DEFAULT_PACKAGE_MANAGER=npm
export CLAUDE_DEFAULT_TEST_FRAMEWORK=jest
export CLAUDE_DEFAULT_LINTER=eslint
export CLAUDE_DEFAULT_FORMATTER=prettier

# ========================================
# CLAUDE CODE SPECIFIC SETTINGS
# ========================================

# Enable all automation features
export CLAUDE_AUTO_ACTION=1
export CLAUDE_AUTOMATION_ENABLED=true
export CLAUDE_AUTO_COMMIT=true
export CLAUDE_AUTO_FORMAT=true
export CLAUDE_AUTO_LINT=true
export CLAUDE_AUTO_TEST=true
export CLAUDE_AUTO_DOCUMENT=true
export CLAUDE_AUTO_OPTIMIZE=true

# Parallel execution
export CLAUDE_PARALLEL_EXECUTION=true
export CLAUDE_MAX_PARALLEL_AGENTS=10
export CLAUDE_MAX_WORKERS=20
export CLAUDE_ENABLE_MULTI_THREADING=true

# Performance settings
export CLAUDE_CONTEXT_OPTIMIZATION=true
export CLAUDE_AUTO_COMPACT_CONTEXT=true
export CLAUDE_SMART_CACHING=true
export CLAUDE_INCREMENTAL_PROCESSING=true

# Cost management
export CLAUDE_COST_LIMIT_PER_DAY=8
export CLAUDE_COST_WARNING_THRESHOLD=6
export CLAUDE_AUTO_STOP_ON_LIMIT=false
export CLAUDE_COST_OPTIMIZATION_MODE=aggressive

# ========================================
# SHELL INTEGRATION
# ========================================

# Auto-respond to shell prompts
export DEBIAN_FRONTEND=noninteractive
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_INSTALL_CLEANUP=1
export NPM_CONFIG_YES=true
export PIP_DISABLE_PIP_VERSION_CHECK=1
export PIPENV_YES=true
export POETRY_VIRTUALENVS_CREATE=true

# Package manager settings
export NPM_CONFIG_SILENT=true
export NPM_CONFIG_PROGRESS=false
export NPM_CONFIG_LOGLEVEL=error
export YARN_SILENT=true
export PIP_QUIET=1

# Git automation
export GIT_MERGE_AUTOEDIT=no
export GIT_CONFIG_NOSYSTEM=1

# ========================================
# ERROR HANDLING
# ========================================

# Continue on non-critical errors
export CLAUDE_CONTINUE_ON_ERROR=true
export CLAUDE_RETRY_FAILED_OPERATIONS=true
export CLAUDE_MAX_RETRIES=3
export CLAUDE_IGNORE_WARNINGS=true

# Logging
export CLAUDE_LOG_LEVEL=INFO
export CLAUDE_LOG_FILE="$HOME/.claude/logs/automation.log"
export CLAUDE_VERBOSE_LOGGING=false
export CLAUDE_DEBUG_MODE=false

# ========================================
# SECURITY OVERRIDES (USE WITH CAUTION)
# ========================================

# Allow all file operations
export CLAUDE_ALLOW_ALL_PATHS=true
export CLAUDE_SKIP_PATH_VALIDATION=true
export CLAUDE_IGNORE_GITIGNORE=false
export CLAUDE_RESPECT_SYSTEM_FILES=true

# Allow all commands
export CLAUDE_ALLOW_ALL_COMMANDS=true
export CLAUDE_SKIP_COMMAND_VALIDATION=true
export CLAUDE_ALLOW_SUDO=false
export CLAUDE_ALLOW_SYSTEM_MODIFICATION=false

# ========================================
# INTEGRATION SETTINGS
# ========================================

# API settings
export CLAUDE_API_TIMEOUT=300
export CLAUDE_API_MAX_RETRIES=3
export CLAUDE_API_RETRY_DELAY=5

# Cache settings
export CLAUDE_CACHE_ENABLED=true
export CLAUDE_CACHE_TTL=3600
export CLAUDE_CACHE_DIR="$HOME/.claude/cache"

# Workspace settings
export CLAUDE_WORKSPACE_DIR="$HOME/.claude/workspace"
export CLAUDE_TEMPLATES_DIR="$HOME/.claude/templates"
export CLAUDE_PROMPTS_DIR="$HOME/.claude/prompts"

# ========================================
# HELPER FUNCTIONS
# ========================================

# Function to source all Claude environments
claude_auto_env() {
    source ~/.claude-auto-env
    echo "Claude automation environment loaded"
}

# Function to create a new project with full automation
claude_create_project() {
    local requirement="$1"
    if [ -z "$requirement" ]; then
        echo "Usage: claude_create_project \"project requirements\""
        return 1
    fi
    
    # Source automation environment
    source ~/.claude-auto-env
    
    # Run creation with all automation enabled
    claude --dangerously-skip-permissions \
           --non-interactive \
           --auto-approve \
           "Create a new project: $requirement"
}

# Function to run Claude in full auto mode
claude_auto() {
    # Source automation environment
    source ~/.claude-auto-env
    
    # Run with all flags
    claude --dangerously-skip-permissions \
           --non-interactive \
           --auto-approve \
           --batch-mode \
           "$@"
}

# Export functions
export -f claude_auto_env
export -f claude_create_project
export -f claude_auto