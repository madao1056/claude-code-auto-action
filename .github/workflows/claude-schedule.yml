name: Claude Code Scheduled Tasks

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}

jobs:
  dependency-updates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Check for outdated dependencies
        run: |
          npm outdated --json > outdated.json || true
          
          if [ -s outdated.json ]; then
            claude analyze-dependencies outdated.json \
              --check security \
              --check compatibility \
              --suggest updates > updates.md
            
            # Create PR if updates are needed
            if [ -s updates.md ]; then
              git checkout -b update-dependencies-$(date +%Y%m%d)
              npm update
              git add package*.json
              git commit -m "chore: update dependencies"
              git push origin update-dependencies-$(date +%Y%m%d)
              
              gh pr create \
                --title "chore: update dependencies" \
                --body-file updates.md \
                --label "dependencies"
            fi
          fi
        env:
          GH_TOKEN: ${{ github.token }}

  code-quality-report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Generate Code Quality Report
        run: |
          # Run various code quality tools
          npm run lint -- --format json > lint-report.json || true
          npm test -- --coverage --json > test-report.json || true
          
          # Analyze with Claude
          claude generate-quality-report \
            --lint lint-report.json \
            --tests test-report.json \
            --format markdown > quality-report.md
          
          # Create issue with report
          gh issue create \
            --title "Weekly Code Quality Report - $(date +%Y-%m-%d)" \
            --body-file quality-report.md \
            --label "quality-report"
        env:
          GH_TOKEN: ${{ github.token }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Security Scan
        run: |
          # Run npm audit
          npm audit --json > audit.json || true
          
          # Run other security tools
          # Example: snyk test --json > snyk.json || true
          
          # Analyze with Claude
          claude analyze-security audit.json \
            --severity high \
            --format json > security-issues.json
          
          # Create issues for critical vulnerabilities
          if [ $(jq '.critical | length' security-issues.json) -gt 0 ]; then
            jq -r '.critical[] | "gh issue create --title \"Security: \(.title)\" --body \"\(.description)\" --label security,critical"' security-issues.json | sh
          fi
        env:
          GH_TOKEN: ${{ github.token }}

  documentation-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Check Documentation Coverage
        run: |
          # Find all source files
          find . -type f \( -name "*.js" -o -name "*.ts" \) -not -path "./node_modules/*" > source-files.txt
          
          # Check documentation coverage
          claude check-documentation source-files.txt \
            --check readme \
            --check jsdoc \
            --check examples > doc-report.md
          
          # Create PR if documentation is missing
          if grep -q "Missing documentation" doc-report.md; then
            git checkout -b update-docs-$(date +%Y%m%d)
            
            # Generate missing documentation
            claude generate-documentation source-files.txt \
              --update-readme \
              --add-jsdoc \
              --add-examples
            
            git add -A
            git commit -m "docs: update documentation"
            git push origin update-docs-$(date +%Y%m%d)
            
            gh pr create \
              --title "docs: update documentation" \
              --body-file doc-report.md \
              --label "documentation"
          fi
        env:
          GH_TOKEN: ${{ github.token }}